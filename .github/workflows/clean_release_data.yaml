name: Download and release latest LIONS data 

on:
  push:

permissions:
  contents: write

jobs:
  run-and-release:
    runs-on: large-runner

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-renv@v2

      - name: Download data
        run: |
          mkdir -p inputs
          Rscript scripts/download_lions.R # This script scrapes the LIONS website for links, checks for new data, and downloads if new releases are available
     
      - name: Show decided env
        run: |
          printf 'SHOULD_RUN=[%s]\n' "${SHOULD_RUN}" 
          printf 'LATEST_MONTH_TAG=[%s]\n' "${LATEST_MONTH_TAG}"
          printf 'LATEST_MONTH_NAME=[%s]\n' "${LATEST_MONTH_NAME}"
          
      - name: Unzip data
        # if: env.SHOULD_RUN == 'true' # Written in the checker of 'Download data' scripts/download_lions.R
        run: |
          mkdir -p inputs/unzipped

          for z in inputs/*.[Zz][Ii][Pp]; do
            echo "Unzipping $z"
            basename=$(basename "$z")
            basename=${basename%.[Zz][Ii][Pp]}
            mkdir -p "inputs/unzipped/$basename"
            unzip -o "$z" -d "inputs/unzipped/$basename"
          done

      - name: Process data
        # if: env.SHOULD_RUN == 'true'
        run: |
          mkdir -p outputs
          Rscript scripts/read_lions.R
          Rscript scripts/read_lions_D27.R
          # Rscript scripts/read_lions_D28.R

      - name: Deidentify PII 
        run: |
          mkdir -p outputs
          Rscript scripts/deidentifying.R # This script redacts pii   
          

     # - uses: ncipollo/release-action@v1
     #   if: env.SHOULD_RUN == 'true' && env.LATEST_MONTH_TAG != '' && env.LATEST_MONTH_NAME != '' # Action won't fail when thereâ€™s nothing to release.
     #   with:
     #     tag: ${{ env.LATEST_MONTH_TAG }} # Tagging with month so it's possible to check 
     #     name: "LIONS latest release ${{ env.LATEST_MONTH_NAME }}"
     #     artifacts: |
     #       outputs/*.feather
     #     generateReleaseNotes: true
     #   env:
     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
